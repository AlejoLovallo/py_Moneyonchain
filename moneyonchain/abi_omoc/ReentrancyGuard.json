{
  "contractName": "ReentrancyGuard",
  "abi": [
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Remco Bloemen <remco@2\\u03c0.com>, Eenae <alexey@mixbytes.io>\",\"details\":\"If you mark a function `nonReentrant`, you should also mark it `external`.\",\"methods\":{},\"title\":\"Helps contracts guard against reentrancy attacks.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/Initializable.sol\":{\"keccak256\":\"0xee7d0fc67ce200dc66e79cae8d56e0aab1f83bf185d8be92feb4e78b6a09c68f\",\"urls\":[\"bzz-raw://f93c892f168339ddbca740122d79eed0e133561c52c93d00fd45ebee23711fd5\",\"dweb:/ipfs/Qmdmhv72FiaJVnS9MPqkU7HRSTjEF3woKbPiRTQJktXGs9\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x905091703d9a19c2ce08e875d890b5635c042dd970b825ba44f15c8e36606da1\",\"urls\":[\"bzz-raw://35213e2453451fb0638f6de637bddd09857216661468872084e06bda6a2b9eef\",\"dweb:/ipfs/QmSQ3bFRm3LJccNBhCL1rGPgjpLCSvgouPKwvydMxipXVD\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061014b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600054610100900460ff168061005357506100536100e1565b80610061575060005460ff16155b61009c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806100e8602e913960400191505060405180910390fd5b600054610100900460ff161580156100c7576000805460ff1961ff0019909116610100171660011790555b600160335580156100de576000805461ff00191690555b50565b303b159056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220bf1ea10762652af81c4c8433816e071c0f0e1c61970579f31845033483c7d6c364736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600054610100900460ff168061005357506100536100e1565b80610061575060005460ff16155b61009c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806100e8602e913960400191505060405180910390fd5b600054610100900460ff161580156100c7576000805460ff1961ff0019909116610100171660011790555b600160335580156100de576000805461ff00191690555b50565b303b159056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220bf1ea10762652af81c4c8433816e071c0f0e1c61970579f31845033483c7d6c364736f6c63430006000033",
  "sourceMap": "279:955:58:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:955:58;;;;;;;",
  "deployedSourceMap": "279:955:58:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:955:58;;;;;;;;;;;;;;;;;;;435:222;;;:::i;:::-;;;391:12:52;;;;;;;;:31;;;407:15;:13;:15::i;:::-;391:47;;;-1:-1:-1;427:11:52;;;;426:12;391:47;383:106;;;;-1:-1:-1;;;383:106:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:19;519:12;;;;;;518:13;537:80;;;;565:12;:19;;-1:-1:-1;;;;565:19:52;;;;;592:18;580:4;592:18;;;537:80;649:1:58::1;633:13;:17:::0;631:55:52;;;;674:5;659:20;;-1:-1:-1;;659:20:52;;;631:55;435:222:58;:::o;776:498:52:-;1187:4;1231:17;1262:7;776:498;:::o",
  "source": "pragma solidity 0.6.0;\n\nimport \"../Initializable.sol\";\n\n/**\n * @title Helps contracts guard against reentrancy attacks.\n * @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n * @dev If you mark a function `nonReentrant`, you should also\n * mark it `external`.\n */\ncontract ReentrancyGuard is Initializable {\n    /// @dev counter to allow mutex lock with only one SSTORE operation\n    uint256 private _guardCounter;\n\n    function initialize() public initializer virtual {\n        // The counter starts at one to prevent changing it from zero to a non-zero\n        // value, which is a more expensive operation.\n        _guardCounter = 1;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/utils/ReentrancyGuard.sol",
  "ast": {
    "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/utils/ReentrancyGuard.sol",
    "exportedSymbols": {
      "ReentrancyGuard": [
        10310
      ]
    },
    "id": 10311,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10272,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:58"
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/Initializable.sol",
        "file": "../Initializable.sol",
        "id": 10273,
        "nodeType": "ImportDirective",
        "scope": 10311,
        "sourceUnit": 9370,
        "src": "24:30:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10274,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9369,
              "src": "307:13:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9369",
                "typeString": "contract Initializable"
              }
            },
            "id": 10275,
            "nodeType": "InheritanceSpecifier",
            "src": "307:13:58"
          }
        ],
        "contractDependencies": [
          9369
        ],
        "contractKind": "contract",
        "documentation": "@title Helps contracts guard against reentrancy attacks.\n@author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n@dev If you mark a function `nonReentrant`, you should also\nmark it `external`.",
        "fullyImplemented": true,
        "id": 10310,
        "linearizedBaseContracts": [
          10310,
          9369
        ],
        "name": "ReentrancyGuard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10277,
            "name": "_guardCounter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 10310,
            "src": "399:29:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10276,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10286,
              "nodeType": "Block",
              "src": "484:173:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10282,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10277,
                      "src": "633:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "649:1:58",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "633:17:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10285,
                  "nodeType": "ExpressionStatement",
                  "src": "633:17:58"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 10287,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10280,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10279,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9343,
                  "src": "464:11:58",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "464:11:58"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:2:58"
            },
            "returnParameters": {
              "id": 10281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:58"
            },
            "scope": 10310,
            "src": "435:222:58",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10304,
              "nodeType": "Block",
              "src": "1056:140:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10289,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10277,
                      "src": "1066:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1083:1:58",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1066:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10292,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:18:58"
                },
                {
                  "assignments": [
                    10294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10294,
                      "name": "localCounter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10304,
                      "src": "1094:20:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1094:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10296,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 10295,
                    "name": "_guardCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10277,
                    "src": "1117:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1094:36:58"
                },
                {
                  "id": 10297,
                  "nodeType": "PlaceholderStatement",
                  "src": "1140:1:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10299,
                          "name": "localCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10294,
                          "src": "1159:12:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10300,
                          "name": "_guardCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10277,
                          "src": "1175:13:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1159:29:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10700,
                        10701
                      ],
                      "referencedDeclaration": 10700,
                      "src": "1151:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:38:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10303,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:38:58"
                }
              ]
            },
            "documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
            "id": 10305,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 10288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1053:2:58"
            },
            "src": "1032:164:58",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10309,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 10310,
            "src": "1202:29:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 10306,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1202:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 10308,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 10307,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1210:2:58",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1202:11:58",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 10311,
        "src": "279:955:58"
      }
    ],
    "src": "0:1235:58"
  },
  "legacyAST": {
    "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/utils/ReentrancyGuard.sol",
    "exportedSymbols": {
      "ReentrancyGuard": [
        10310
      ]
    },
    "id": 10311,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10272,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:58"
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/Initializable.sol",
        "file": "../Initializable.sol",
        "id": 10273,
        "nodeType": "ImportDirective",
        "scope": 10311,
        "sourceUnit": 9370,
        "src": "24:30:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10274,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9369,
              "src": "307:13:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9369",
                "typeString": "contract Initializable"
              }
            },
            "id": 10275,
            "nodeType": "InheritanceSpecifier",
            "src": "307:13:58"
          }
        ],
        "contractDependencies": [
          9369
        ],
        "contractKind": "contract",
        "documentation": "@title Helps contracts guard against reentrancy attacks.\n@author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n@dev If you mark a function `nonReentrant`, you should also\nmark it `external`.",
        "fullyImplemented": true,
        "id": 10310,
        "linearizedBaseContracts": [
          10310,
          9369
        ],
        "name": "ReentrancyGuard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10277,
            "name": "_guardCounter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 10310,
            "src": "399:29:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10276,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10286,
              "nodeType": "Block",
              "src": "484:173:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10282,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10277,
                      "src": "633:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "649:1:58",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "633:17:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10285,
                  "nodeType": "ExpressionStatement",
                  "src": "633:17:58"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 10287,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10280,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10279,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9343,
                  "src": "464:11:58",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "464:11:58"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:2:58"
            },
            "returnParameters": {
              "id": 10281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:58"
            },
            "scope": 10310,
            "src": "435:222:58",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10304,
              "nodeType": "Block",
              "src": "1056:140:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10289,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10277,
                      "src": "1066:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1083:1:58",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1066:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10292,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:18:58"
                },
                {
                  "assignments": [
                    10294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10294,
                      "name": "localCounter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10304,
                      "src": "1094:20:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1094:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10296,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 10295,
                    "name": "_guardCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10277,
                    "src": "1117:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1094:36:58"
                },
                {
                  "id": 10297,
                  "nodeType": "PlaceholderStatement",
                  "src": "1140:1:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10299,
                          "name": "localCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10294,
                          "src": "1159:12:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10300,
                          "name": "_guardCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10277,
                          "src": "1175:13:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1159:29:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10700,
                        10701
                      ],
                      "referencedDeclaration": 10700,
                      "src": "1151:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:38:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10303,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:38:58"
                }
              ]
            },
            "documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
            "id": 10305,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 10288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1053:2:58"
            },
            "src": "1032:164:58",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10309,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 10310,
            "src": "1202:29:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 10306,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1202:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 10308,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 10307,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1210:2:58",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1202:11:58",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 10311,
        "src": "279:955:58"
      }
    ],
    "src": "0:1235:58"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-29T21:30:43.190Z",
  "devdoc": {
    "author": "Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>",
    "details": "If you mark a function `nonReentrant`, you should also mark it `external`.",
    "methods": {},
    "title": "Helps contracts guard against reentrancy attacks."
  },
  "userdoc": {
    "methods": {}
  }
}