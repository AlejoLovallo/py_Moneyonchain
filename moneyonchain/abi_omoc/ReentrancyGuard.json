{
  "contractName": "ReentrancyGuard",
  "abi": [
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Remco Bloemen <remco@2\\u03c0.com>, Eenae <alexey@mixbytes.io>\",\"details\":\"If you mark a function `nonReentrant`, you should also mark it `external`.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_guardCounter\":{\"details\":\"counter to allow mutex lock with only one SSTORE operation\"}},\"title\":\"Helps contracts guard against reentrancy attacks.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/ReentrancyGuard.sol\":{\"keccak256\":\"0xa1cd900d8fc0754c7b208b8f9c53ae30d5a2cc204474818e224bf2c64f4e2601\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8bf907c2da28f9ce94bdb993befa3271f5e4bb47a920e16f3f805bab51178760\",\"dweb:/ipfs/QmUxtZbdsmgLwN8Aki8gPQqTzEUfPbt9eLyV5eQWTVB9Zk\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061014b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600054610100900460ff168061005357506100536100e1565b80610061575060005460ff16155b61009c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806100e8602e913960400191505060405180910390fd5b600054610100900460ff161580156100c7576000805460ff1961ff0019909116610100171660011790555b600160335580156100de576000805461ff00191690555b50565b303b159056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220b9eaa88bfd70af046d73cd960365304d9a345887b4caa75ec03980f6f8cb1e3764736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600054610100900460ff168061005357506100536100e1565b80610061575060005460ff16155b61009c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806100e8602e913960400191505060405180910390fd5b600054610100900460ff161580156100c7576000805460ff1961ff0019909116610100171660011790555b600160335580156100de576000805461ff00191690555b50565b303b159056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220b9eaa88bfd70af046d73cd960365304d9a345887b4caa75ec03980f6f8cb1e3764736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "388:955:26:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "388:955:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:222;;;:::i;:::-;;;1024:12:34;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:34;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:34;;;;;1225:18;1213:4;1225:18;;;1170:80;758:1:26::1;742:13;:17:::0;1264:55:34;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:34;;;1264:55;544:222:26;:::o;1409:498:34:-;1820:4;1864:17;1895:7;1409:498;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\n\nimport {Initializable} from \"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\";\n\n/**\n * @title Helps contracts guard against reentrancy attacks.\n * @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n * @dev If you mark a function `nonReentrant`, you should also\n * mark it `external`.\n */\ncontract ReentrancyGuard is Initializable {\n    /// @dev counter to allow mutex lock with only one SSTORE operation\n    uint256 private _guardCounter;\n\n    function initialize() public virtual initializer {\n        // The counter starts at one to prevent changing it from zero to a non-zero\n        // value, which is a more expensive operation.\n        _guardCounter = 1;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/ReentrancyGuard.sol",
  "ast": {
    "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/ReentrancyGuard.sol",
    "exportedSymbols": {
      "ReentrancyGuard": [
        3425
      ]
    },
    "id": 3426,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3383,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
        "id": 3385,
        "nodeType": "ImportDirective",
        "scope": 3426,
        "sourceUnit": 4044,
        "src": "64:99:26",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3384,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "72:13:26",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3387,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4043,
              "src": "416:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4043",
                "typeString": "contract Initializable"
              }
            },
            "id": 3388,
            "nodeType": "InheritanceSpecifier",
            "src": "416:13:26"
          }
        ],
        "contractDependencies": [
          4043
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3386,
          "nodeType": "StructuredDocumentation",
          "src": "165:222:26",
          "text": " @title Helps contracts guard against reentrancy attacks.\n @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n @dev If you mark a function `nonReentrant`, you should also\n mark it `external`."
        },
        "fullyImplemented": true,
        "id": 3425,
        "linearizedBaseContracts": [
          3425,
          4043
        ],
        "name": "ReentrancyGuard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 3389,
              "nodeType": "StructuredDocumentation",
              "src": "436:67:26",
              "text": "@dev counter to allow mutex lock with only one SSTORE operation"
            },
            "id": 3391,
            "mutability": "mutable",
            "name": "_guardCounter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3425,
            "src": "508:29:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3390,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "508:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3400,
              "nodeType": "Block",
              "src": "593:173:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3396,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3391,
                      "src": "742:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 3397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "758:1:26",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "742:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3399,
                  "nodeType": "ExpressionStatement",
                  "src": "742:17:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 3401,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3393,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4016,
                  "src": "581:11:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "581:11:26"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:2:26"
            },
            "returnParameters": {
              "id": 3395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:0:26"
            },
            "scope": 3425,
            "src": "544:222:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3419,
              "nodeType": "Block",
              "src": "1165:140:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3404,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3391,
                      "src": "1175:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 3405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1192:1:26",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1175:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3407,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:18:26"
                },
                {
                  "assignments": [
                    3409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3409,
                      "mutability": "mutable",
                      "name": "localCounter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3419,
                      "src": "1203:20:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3408,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1203:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3411,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3410,
                    "name": "_guardCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3391,
                    "src": "1226:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1203:36:26"
                },
                {
                  "id": 3412,
                  "nodeType": "PlaceholderStatement",
                  "src": "1249:1:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3414,
                          "name": "localCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3409,
                          "src": "1268:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3415,
                          "name": "_guardCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3391,
                          "src": "1284:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1268:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1260:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3418,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:38:26"
                }
              ]
            },
            "documentation": {
              "id": 3402,
              "nodeType": "StructuredDocumentation",
              "src": "772:364:26",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
            },
            "id": 3420,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:2:26"
            },
            "src": "1141:164:26",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3424,
            "mutability": "mutable",
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3425,
            "src": "1311:29:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3421,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3423,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3422,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1319:2:26",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1311:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3426,
        "src": "388:955:26"
      }
    ],
    "src": "39:1305:26"
  },
  "legacyAST": {
    "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/ReentrancyGuard.sol",
    "exportedSymbols": {
      "ReentrancyGuard": [
        3425
      ]
    },
    "id": 3426,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3383,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
        "id": 3385,
        "nodeType": "ImportDirective",
        "scope": 3426,
        "sourceUnit": 4044,
        "src": "64:99:26",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3384,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "72:13:26",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3387,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4043,
              "src": "416:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4043",
                "typeString": "contract Initializable"
              }
            },
            "id": 3388,
            "nodeType": "InheritanceSpecifier",
            "src": "416:13:26"
          }
        ],
        "contractDependencies": [
          4043
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3386,
          "nodeType": "StructuredDocumentation",
          "src": "165:222:26",
          "text": " @title Helps contracts guard against reentrancy attacks.\n @author Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>\n @dev If you mark a function `nonReentrant`, you should also\n mark it `external`."
        },
        "fullyImplemented": true,
        "id": 3425,
        "linearizedBaseContracts": [
          3425,
          4043
        ],
        "name": "ReentrancyGuard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 3389,
              "nodeType": "StructuredDocumentation",
              "src": "436:67:26",
              "text": "@dev counter to allow mutex lock with only one SSTORE operation"
            },
            "id": 3391,
            "mutability": "mutable",
            "name": "_guardCounter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3425,
            "src": "508:29:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3390,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "508:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3400,
              "nodeType": "Block",
              "src": "593:173:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3396,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3391,
                      "src": "742:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 3397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "758:1:26",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "742:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3399,
                  "nodeType": "ExpressionStatement",
                  "src": "742:17:26"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 3401,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3393,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4016,
                  "src": "581:11:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "581:11:26"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:2:26"
            },
            "returnParameters": {
              "id": 3395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:0:26"
            },
            "scope": 3425,
            "src": "544:222:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3419,
              "nodeType": "Block",
              "src": "1165:140:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3404,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3391,
                      "src": "1175:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 3405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1192:1:26",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1175:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3407,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:18:26"
                },
                {
                  "assignments": [
                    3409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3409,
                      "mutability": "mutable",
                      "name": "localCounter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3419,
                      "src": "1203:20:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3408,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1203:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3411,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3410,
                    "name": "_guardCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3391,
                    "src": "1226:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1203:36:26"
                },
                {
                  "id": 3412,
                  "nodeType": "PlaceholderStatement",
                  "src": "1249:1:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3414,
                          "name": "localCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3409,
                          "src": "1268:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3415,
                          "name": "_guardCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3391,
                          "src": "1284:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1268:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1260:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3418,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:38:26"
                }
              ]
            },
            "documentation": {
              "id": 3402,
              "nodeType": "StructuredDocumentation",
              "src": "772:364:26",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
            },
            "id": 3420,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:2:26"
            },
            "src": "1141:164:26",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3424,
            "mutability": "mutable",
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3425,
            "src": "1311:29:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3421,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3423,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3422,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1319:2:26",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1311:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3426,
        "src": "388:955:26"
      }
    ],
    "src": "39:1305:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-01T22:39:15.395Z",
  "devdoc": {
    "author": "Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>",
    "details": "If you mark a function `nonReentrant`, you should also mark it `external`.",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "_guardCounter": {
        "details": "counter to allow mutex lock with only one SSTORE operation"
      }
    },
    "title": "Helps contracts guard against reentrancy attacks.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}