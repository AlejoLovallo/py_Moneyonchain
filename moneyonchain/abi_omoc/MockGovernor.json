{
  "contractName": "MockGovernor",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_changer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "changer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ChangeContract",
          "name": "",
          "type": "address"
        }
      ],
      "name": "executeChange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_changer",
          "type": "address"
        }
      ],
      "name": "isAuthorizedChanger",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_changer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"changer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ChangeContract\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executeChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_changer\",\"type\":\"address\"}],\"name\":\"isAuthorizedChanger\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAuthorizedChanger(address)\":{\"params\":{\"_changer\":\"Address of the contract that will be tested\"}}},\"title\":\"MockGovernor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeChange(address)\":{\"notice\":\"Function to be called to make the changes in changeContract\"},\"isAuthorizedChanger(address)\":{\"notice\":\"Returns true if the _changer address is currently authorized to make changes within the system\"}},\"notice\":\"This contract is not intended to be used in a production system It was designed to be using in a testing environment only A mock governor that let any address do anything.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/testing_mocks/MockGovernor.sol\":\"MockGovernor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/ChangeContract.sol\":{\"keccak256\":\"0x6c786977acab4c076087e4569b2fd423e2c3a7e45150353c18de328b7e114843\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cbdaaed4b97fc67586f6f20f185d6227dd4a1d0896bd6db20ee06744cca2eaa6\",\"dweb:/ipfs/QmbZrRtxMdebQa1dHfTdC1pPA48ZvzSopcc2pLmmJ7XJ9X\"]},\"/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/IGovernor.sol\":{\"keccak256\":\"0xed68469a6e1759efc5dece43aaf7fdf25e39163626df454bd9f9662ca8e9df61\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a615e8209f9f332ed8d16452fd83c412f44162bd6fb8af6a1556bdc033a36735\",\"dweb:/ipfs/Qmda7FzLXHG9WZSTVBXwGCjLT7xU5Ugh287jQ4qafAr5WX\"]},\"/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/testing_mocks/MockGovernor.sol\":{\"keccak256\":\"0xcf72604eef2766af2c4c5e03654ecd1bdbf21bab87d5cc62ef0fc763c03dc108\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a45e2d2e429be3ede7153c0e0a67e7549ef6c271d5f7a5f23b7ccc0d13bb0288\",\"dweb:/ipfs/QmdsaSgaqMparRtAmCMGWBeb5ve6WvypgoaJWXToqvNpAV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516102103803806102108339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556101ab806100656000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806311b0ea16146100465780638c777e821461006a578063d994d6d514610092575b600080fd5b61004e6100cc565b604080516001600160a01b039092168252519081900360200190f35b6100906004803603602081101561008057600080fd5b50356001600160a01b03166100db565b005b6100b8600480360360208110156100a857600080fd5b50356001600160a01b0316610118565b604080519115158252519081900360200190f35b6000546001600160a01b031681565b6040805162461bcd60e51b815260206004820152600d60248201526c155b9a5b5c1b195b595b9d1959609a1b604482015290519081900360640190fd5b600080546001600160a01b0383811691161461016d576040805162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21031b430b733b2b960891b604482015290519081900360640190fd5b50600191905056fea2646970667358221220079fed2b13a87237f4a514e8d90b1c8cbc3eb54e718b15ca2143a6d6424b6b7a64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806311b0ea16146100465780638c777e821461006a578063d994d6d514610092575b600080fd5b61004e6100cc565b604080516001600160a01b039092168252519081900360200190f35b6100906004803603602081101561008057600080fd5b50356001600160a01b03166100db565b005b6100b8600480360360208110156100a857600080fd5b50356001600160a01b0316610118565b604080519115158252519081900360200190f35b6000546001600160a01b031681565b6040805162461bcd60e51b815260206004820152600d60248201526c155b9a5b5c1b195b595b9d1959609a1b604482015290519081900360640190fd5b600080546001600160a01b0383811691161461016d576040805162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21031b430b733b2b960891b604482015290519081900360640190fd5b50600191905056fea2646970667358221220079fed2b13a87237f4a514e8d90b1c8cbc3eb54e718b15ca2143a6d6424b6b7a64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "448:718:32:-:0;;;518:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;518:72:32;565:7;:18;;-1:-1:-1;;;;;565:18:32;;;-1:-1:-1;;;;;;565:18:32;;;;;;;;;448:718;;;;;;",
  "deployedSourceMap": "448:718:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:22;;;:::i;:::-;;;;-1:-1:-1;;;;;489:22:32;;;;;;;;;;;;;;686:105;;;;;;;;;;;;;;;;-1:-1:-1;686:105:32;-1:-1:-1;;;;;686:105:32;;:::i;:::-;;994:170;;;;;;;;;;;;;;;;-1:-1:-1;994:170:32;-1:-1:-1;;;;;994:170:32;;:::i;:::-;;;;;;;;;;;;;;;;;;489:22;;;-1:-1:-1;;;;;489:22:32;;:::o;686:105::-;753:31;;;-1:-1:-1;;;753:31:32;;;;;;;;;;;;-1:-1:-1;;;753:31:32;;;;;;;;;;;;;;994:170;1073:4;1097:7;;-1:-1:-1;;;;;1097:19:32;;;:7;;:19;1089:47;;;;;-1:-1:-1;;;1089:47:32;;;;;;;;;;;;-1:-1:-1;;;1089:47:32;;;;;;;;;;;;;;;-1:-1:-1;1153:4:32;994:170;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\n\nimport {ChangeContract} from \"../moc-governance/Governance/ChangeContract.sol\";\nimport {IGovernor} from \"../moc-governance/Governance/IGovernor.sol\";\n\n/**\n  @title MockGovernor\n  @notice This contract is not intended to be used in a production system\n          It was designed to be using in a testing environment only\n          A mock governor that let any address do anything.\n  */\ncontract MockGovernor is IGovernor {\n    address public changer;\n\n    constructor(address _changer) public {\n        changer = _changer;\n    }\n\n    /**\n      @notice Function to be called to make the changes in changeContract\n     */\n    function executeChange(ChangeContract) external override {\n        require(false, \"Unimplemented\");\n    }\n\n    /**\n      @notice Returns true if the _changer address is currently authorized to make\n      changes within the system\n      @param _changer Address of the contract that will be tested\n     */\n    function isAuthorizedChanger(address _changer) external override view returns (bool) {\n        require(changer == _changer, \"Invalid changer\");\n        return true;\n    }\n}\n",
  "sourcePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/testing_mocks/MockGovernor.sol",
  "ast": {
    "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/testing_mocks/MockGovernor.sol",
    "exportedSymbols": {
      "MockGovernor": [
        3923
      ]
    },
    "id": 3924,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3871,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:32"
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/ChangeContract.sol",
        "file": "../moc-governance/Governance/ChangeContract.sol",
        "id": 3873,
        "nodeType": "ImportDirective",
        "scope": 3924,
        "sourceUnit": 3034,
        "src": "64:79:32",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3872,
              "name": "ChangeContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "72:14:32",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/IGovernor.sol",
        "file": "../moc-governance/Governance/IGovernor.sol",
        "id": 3875,
        "nodeType": "ImportDirective",
        "scope": 3924,
        "sourceUnit": 3250,
        "src": "144:69:32",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3874,
              "name": "IGovernor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "152:9:32",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3877,
              "name": "IGovernor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3249,
              "src": "473:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGovernor_$3249",
                "typeString": "contract IGovernor"
              }
            },
            "id": 3878,
            "nodeType": "InheritanceSpecifier",
            "src": "473:9:32"
          }
        ],
        "contractDependencies": [
          3249
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3876,
          "nodeType": "StructuredDocumentation",
          "src": "215:232:32",
          "text": "@title MockGovernor\n@notice This contract is not intended to be used in a production system\nIt was designed to be using in a testing environment only\nA mock governor that let any address do anything."
        },
        "fullyImplemented": true,
        "id": 3923,
        "linearizedBaseContracts": [
          3923,
          3249
        ],
        "name": "MockGovernor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11b0ea16",
            "id": 3880,
            "mutability": "mutable",
            "name": "changer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3923,
            "src": "489:22:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3879,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3889,
              "nodeType": "Block",
              "src": "555:35:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3885,
                      "name": "changer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3880,
                      "src": "565:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3886,
                      "name": "_changer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3882,
                      "src": "575:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "565:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3888,
                  "nodeType": "ExpressionStatement",
                  "src": "565:18:32"
                }
              ]
            },
            "documentation": null,
            "id": 3890,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3882,
                  "mutability": "mutable",
                  "name": "_changer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3890,
                  "src": "530:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "529:18:32"
            },
            "returnParameters": {
              "id": 3884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:0:32"
            },
            "scope": 3923,
            "src": "518:72:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3240
            ],
            "body": {
              "id": 3902,
              "nodeType": "Block",
              "src": "743:48:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 3898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "761:5:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e696d706c656d656e746564",
                        "id": 3899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "768:15:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e237df3e87464709ad112ae018f59b273a147ee5f5c5e36f4d0154a6c0b0b89b",
                          "typeString": "literal_string \"Unimplemented\""
                        },
                        "value": "Unimplemented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e237df3e87464709ad112ae018f59b273a147ee5f5c5e36f4d0154a6c0b0b89b",
                          "typeString": "literal_string \"Unimplemented\""
                        }
                      ],
                      "id": 3897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "753:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:31:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3901,
                  "nodeType": "ExpressionStatement",
                  "src": "753:31:32"
                }
              ]
            },
            "documentation": {
              "id": 3891,
              "nodeType": "StructuredDocumentation",
              "src": "596:85:32",
              "text": "@notice Function to be called to make the changes in changeContract"
            },
            "functionSelector": "8c777e82",
            "id": 3903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeChange",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3895,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "734:8:32"
            },
            "parameters": {
              "id": 3894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3893,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3903,
                  "src": "709:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ChangeContract_$3033",
                    "typeString": "contract ChangeContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3892,
                    "name": "ChangeContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3033,
                    "src": "709:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ChangeContract_$3033",
                      "typeString": "contract ChangeContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "708:16:32"
            },
            "returnParameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:32"
            },
            "scope": 3923,
            "src": "686:105:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3248
            ],
            "body": {
              "id": 3921,
              "nodeType": "Block",
              "src": "1079:85:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3913,
                          "name": "changer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3880,
                          "src": "1097:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3914,
                          "name": "_changer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3906,
                          "src": "1108:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1097:19:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206368616e676572",
                        "id": 3916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1118:17:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ddb796cf3d764f1c258275cd45b15705def4afed2eae3918ae7a50539623ba0",
                          "typeString": "literal_string \"Invalid changer\""
                        },
                        "value": "Invalid changer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ddb796cf3d764f1c258275cd45b15705def4afed2eae3918ae7a50539623ba0",
                          "typeString": "literal_string \"Invalid changer\""
                        }
                      ],
                      "id": 3912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1089:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1089:47:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3918,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:47:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1153:4:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3911,
                  "id": 3920,
                  "nodeType": "Return",
                  "src": "1146:11:32"
                }
              ]
            },
            "documentation": {
              "id": 3904,
              "nodeType": "StructuredDocumentation",
              "src": "797:192:32",
              "text": "@notice Returns true if the _changer address is currently authorized to make\nchanges within the system\n@param _changer Address of the contract that will be tested"
            },
            "functionSelector": "d994d6d5",
            "id": 3922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorizedChanger",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3908,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1050:8:32"
            },
            "parameters": {
              "id": 3907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3906,
                  "mutability": "mutable",
                  "name": "_changer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3922,
                  "src": "1023:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1022:18:32"
            },
            "returnParameters": {
              "id": 3911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3910,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3922,
                  "src": "1073:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3909,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1072:6:32"
            },
            "scope": 3923,
            "src": "994:170:32",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3924,
        "src": "448:718:32"
      }
    ],
    "src": "39:1128:32"
  },
  "legacyAST": {
    "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/testing_mocks/MockGovernor.sol",
    "exportedSymbols": {
      "MockGovernor": [
        3923
      ]
    },
    "id": 3924,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3871,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:32"
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/ChangeContract.sol",
        "file": "../moc-governance/Governance/ChangeContract.sol",
        "id": 3873,
        "nodeType": "ImportDirective",
        "scope": 3924,
        "sourceUnit": 3034,
        "src": "64:79:32",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3872,
              "name": "ChangeContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "72:14:32",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/moc-shared/contracts/moc-governance/Governance/IGovernor.sol",
        "file": "../moc-governance/Governance/IGovernor.sol",
        "id": 3875,
        "nodeType": "ImportDirective",
        "scope": 3924,
        "sourceUnit": 3250,
        "src": "144:69:32",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3874,
              "name": "IGovernor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "152:9:32",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3877,
              "name": "IGovernor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3249,
              "src": "473:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGovernor_$3249",
                "typeString": "contract IGovernor"
              }
            },
            "id": 3878,
            "nodeType": "InheritanceSpecifier",
            "src": "473:9:32"
          }
        ],
        "contractDependencies": [
          3249
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3876,
          "nodeType": "StructuredDocumentation",
          "src": "215:232:32",
          "text": "@title MockGovernor\n@notice This contract is not intended to be used in a production system\nIt was designed to be using in a testing environment only\nA mock governor that let any address do anything."
        },
        "fullyImplemented": true,
        "id": 3923,
        "linearizedBaseContracts": [
          3923,
          3249
        ],
        "name": "MockGovernor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11b0ea16",
            "id": 3880,
            "mutability": "mutable",
            "name": "changer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3923,
            "src": "489:22:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3879,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3889,
              "nodeType": "Block",
              "src": "555:35:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3885,
                      "name": "changer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3880,
                      "src": "565:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3886,
                      "name": "_changer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3882,
                      "src": "575:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "565:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3888,
                  "nodeType": "ExpressionStatement",
                  "src": "565:18:32"
                }
              ]
            },
            "documentation": null,
            "id": 3890,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3882,
                  "mutability": "mutable",
                  "name": "_changer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3890,
                  "src": "530:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "529:18:32"
            },
            "returnParameters": {
              "id": 3884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:0:32"
            },
            "scope": 3923,
            "src": "518:72:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3240
            ],
            "body": {
              "id": 3902,
              "nodeType": "Block",
              "src": "743:48:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 3898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "761:5:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e696d706c656d656e746564",
                        "id": 3899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "768:15:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e237df3e87464709ad112ae018f59b273a147ee5f5c5e36f4d0154a6c0b0b89b",
                          "typeString": "literal_string \"Unimplemented\""
                        },
                        "value": "Unimplemented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e237df3e87464709ad112ae018f59b273a147ee5f5c5e36f4d0154a6c0b0b89b",
                          "typeString": "literal_string \"Unimplemented\""
                        }
                      ],
                      "id": 3897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "753:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:31:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3901,
                  "nodeType": "ExpressionStatement",
                  "src": "753:31:32"
                }
              ]
            },
            "documentation": {
              "id": 3891,
              "nodeType": "StructuredDocumentation",
              "src": "596:85:32",
              "text": "@notice Function to be called to make the changes in changeContract"
            },
            "functionSelector": "8c777e82",
            "id": 3903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeChange",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3895,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "734:8:32"
            },
            "parameters": {
              "id": 3894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3893,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3903,
                  "src": "709:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ChangeContract_$3033",
                    "typeString": "contract ChangeContract"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3892,
                    "name": "ChangeContract",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3033,
                    "src": "709:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ChangeContract_$3033",
                      "typeString": "contract ChangeContract"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "708:16:32"
            },
            "returnParameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:32"
            },
            "scope": 3923,
            "src": "686:105:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3248
            ],
            "body": {
              "id": 3921,
              "nodeType": "Block",
              "src": "1079:85:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3913,
                          "name": "changer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3880,
                          "src": "1097:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3914,
                          "name": "_changer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3906,
                          "src": "1108:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1097:19:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206368616e676572",
                        "id": 3916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1118:17:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ddb796cf3d764f1c258275cd45b15705def4afed2eae3918ae7a50539623ba0",
                          "typeString": "literal_string \"Invalid changer\""
                        },
                        "value": "Invalid changer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ddb796cf3d764f1c258275cd45b15705def4afed2eae3918ae7a50539623ba0",
                          "typeString": "literal_string \"Invalid changer\""
                        }
                      ],
                      "id": 3912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1089:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1089:47:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3918,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:47:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1153:4:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3911,
                  "id": 3920,
                  "nodeType": "Return",
                  "src": "1146:11:32"
                }
              ]
            },
            "documentation": {
              "id": 3904,
              "nodeType": "StructuredDocumentation",
              "src": "797:192:32",
              "text": "@notice Returns true if the _changer address is currently authorized to make\nchanges within the system\n@param _changer Address of the contract that will be tested"
            },
            "functionSelector": "d994d6d5",
            "id": 3922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorizedChanger",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3908,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1050:8:32"
            },
            "parameters": {
              "id": 3907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3906,
                  "mutability": "mutable",
                  "name": "_changer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3922,
                  "src": "1023:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1022:18:32"
            },
            "returnParameters": {
              "id": 3911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3910,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3922,
                  "src": "1073:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3909,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1072:6:32"
            },
            "scope": 3923,
            "src": "994:170:32",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3924,
        "src": "448:718:32"
      }
    ],
    "src": "39:1128:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-01T22:39:15.400Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isAuthorizedChanger(address)": {
        "params": {
          "_changer": "Address of the contract that will be tested"
        }
      }
    },
    "title": "MockGovernor",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeChange(address)": {
        "notice": "Function to be called to make the changes in changeContract"
      },
      "isAuthorizedChanger(address)": {
        "notice": "Returns true if the _changer address is currently authorized to make changes within the system"
      }
    },
    "notice": "This contract is not intended to be used in a production system It was designed to be using in a testing environment only A mock governor that let any address do anything.",
    "version": 1
  }
}