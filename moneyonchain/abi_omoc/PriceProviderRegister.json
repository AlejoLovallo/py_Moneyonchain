{
  "contractName": "PriceProviderRegister",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IGovernor",
          "name": "newIGovernor",
          "type": "address"
        }
      ],
      "name": "changeIGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "delegateCallToChanger",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "contract IGovernor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "contract IGovernor",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "coinPair",
          "type": "bytes32"
        },
        {
          "internalType": "contract IPriceProviderRegisterEntry",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "registerCoinPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "coinPair",
          "type": "bytes32"
        },
        {
          "internalType": "contract IPriceProviderRegisterEntry",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setCoinPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "coinPair",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "hint",
          "type": "uint256"
        }
      ],
      "name": "unRegisterCoinPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "coinpair",
          "type": "bytes32"
        }
      ],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getCoinPairCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getCoinPairAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "coinPair",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "hint",
          "type": "uint256"
        }
      ],
      "name": "getCoinPairIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"newIGovernor\",\"type\":\"address\"}],\"name\":\"changeIGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateCallToChanger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getCoinPairAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCoinPairCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"coinPair\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"hint\",\"type\":\"uint256\"}],\"name\":\"getCoinPairIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"coinpair\",\"type\":\"bytes32\"}],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"coinPair\",\"type\":\"bytes32\"},{\"internalType\":\"contract IPriceProviderRegisterEntry\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"registerCoinPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"coinPair\",\"type\":\"bytes32\"},{\"internalType\":\"contract IPriceProviderRegisterEntry\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setCoinPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"coinPair\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"hint\",\"type\":\"uint256\"}],\"name\":\"unRegisterCoinPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"changeIGovernor(address)\":{\"params\":{\"newIGovernor\":\"New governor address\"}},\"getCoinPairAtIndex(uint256)\":{\"params\":{\"i\":\"index to query.\"}},\"getCoinPairIndex(bytes32,uint256)\":{\"params\":{\"coinPair\":\"The bytes32-encoded coinpair string (e.g. BTCUSD)\",\"hint\":\"Optional hint to start traversing the coinPairList array, zero is to search all the array.\"}},\"getContractAddress(bytes32)\":{\"params\":{\"coinpair\":\"Coin-pair string to lookup (e.g: BTCUSD)\"},\"returns\":{\"_0\":\"address Address of contract or zero if does not exist or was deleted.\"}},\"initialize(address)\":{\"details\":\"This initialize replaces the constructor but it is not called automatically. It is necessary because of the upgradeability of the contracts\",\"params\":{\"_governor\":\"Governor address\"}},\"registerCoinPair(bytes32,address)\":{\"params\":{\"addr\":\"The contract address associated to the coinpair.\",\"coinPair\":\"The bytes32-encoded coinpair string (e.g. BTCUSD)\"}},\"setCoinPair(bytes32,address)\":{\"params\":{\"addr\":\"The contract address associated to the coinpair.\",\"coinPair\":\"The bytes32-encoded coinpair string (e.g. BTCUSD)\"}},\"unRegisterCoinPair(bytes32,uint256)\":{\"params\":{\"coinPair\":\"The bytes32-encoded coinpair string (e.g. BTCUSD)\",\"hint\":\"Optional hint to start traversing the coinPairList array.\"}}},\"title\":\"A registry for the coin pair prices, this is more general than OracleManager that stores only the coin pairs that are published by oracles.\"},\"userdoc\":{\"methods\":{\"changeIGovernor(address)\":{\"notice\":\"Change the contract's governor. Should be called through the old governance system\"},\"getCoinPairAtIndex(uint256)\":{\"notice\":\"Returns the coin pair at index.\"},\"getCoinPairCount()\":{\"notice\":\"Returns the count of registered coin pairs. Keep in mind that Deleted coin-pairs will contain zeroed addresses.\"},\"getCoinPairIndex(bytes32,uint256)\":{\"notice\":\"Searches a coinpair in coinPairList\"},\"getContractAddress(bytes32)\":{\"notice\":\"Return the contract address for a specified registered coin pair.\"},\"initialize(address)\":{\"notice\":\"Initialize the contract with the basic settings\"},\"registerCoinPair(bytes32,address)\":{\"notice\":\"Register a new coin pair contract.\"},\"setCoinPair(bytes32,address)\":{\"notice\":\"Set the address for a coinpair (the old one is lost!!!!)\"},\"unRegisterCoinPair(bytes32,uint256)\":{\"notice\":\"Unregister a coin pair contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/PriceProviderRegister.sol\":\"PriceProviderRegister\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/PriceProviderRegister.sol\":{\"keccak256\":\"0xc955fa0ae845614ba3e203b633114b1f449f26089e4cb93e1187f94e0faeae39\",\"urls\":[\"bzz-raw://0bdd75240f30eeae467323c59395cfa7d2a57a24fa3ee16b24da9175a76493e9\",\"dweb:/ipfs/Qmdpzj9DsnR2L79GMiyUCC1gNJMTj2yWg19a7XQHhioL5t\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/PriceProviderRegisterStorage.sol\":{\"keccak256\":\"0x26cf21eb6573c8d903be4fb9986799bf6d1544390b85a994a44dac9494d23c91\",\"urls\":[\"bzz-raw://2b92d67d995e26579e03b456568a2068e5d2b449ccaadfd1e8df141cfb25604f\",\"dweb:/ipfs/Qmawcm8AdSFWT8DKLDn6WzgLRrbc4cpHL3PoYfjceuvmqS\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/libs/CoinPairRegisterLib.sol\":{\"keccak256\":\"0x6ca64dd6f3f84940b2079a039ad34237bc0b76180e54d4e4f65e5f83abdc4183\",\"urls\":[\"bzz-raw://5c6d383aa2d0bbbf93f60c13ccf0d00ea6b8551296208031001f1a21b8a01fd8\",\"dweb:/ipfs/QmNcB7RmWf4t8fn4TLbMR8xyi4NjJm943tytPSeErNmJw5\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/libs/GovernedAbstract.sol\":{\"keccak256\":\"0xb42a357d19c95f376760dde407ee253482c1016ec8a7b118396b2433b6b66e97\",\"urls\":[\"bzz-raw://c7b63520061d13392859b7c54242f9b7395c9c53b340cd04ab56c22c3740f1b4\",\"dweb:/ipfs/QmTyGyBfj8Kf4QLC6ANbBZk4fmrHwWUJEoP8MFMtZwpvdV\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/libs/IPriceProviderRegisterEntry.sol\":{\"keccak256\":\"0xfeccb21c4e7860abdbd8e47f91c74148c2ff684aacd0e1a51a2d72c6f55c93d7\",\"urls\":[\"bzz-raw://4de97c4a682b8433fbf17554ce0fee4a8c558321f298a2b170148e8850b22349\",\"dweb:/ipfs/QmXzpT6i4twkV7AEyRQ1aCC7T67yY6hzZ8ghGEHVQtTQhq\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/moc-gobernanza/Governance/ChangeContract.sol\":{\"keccak256\":\"0x75d82d8e2143aa41764e6e88899c362ce9806e46d1f4ac32129260d831d884c2\",\"urls\":[\"bzz-raw://e904143d8077eff6ee9c30ad197d597ad924973c79b5d1b317cb27233e60e237\",\"dweb:/ipfs/Qme4FrR1fuaiVwGpHBXuqa7mmJCUErFS4794xyFusWVwzd\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/moc-gobernanza/Governance/Governed.sol\":{\"keccak256\":\"0x9165ada482a33987cc6dbfd2a6f2cf4ee5c79fe89f2f287ec8178b59f6f89ed5\",\"urls\":[\"bzz-raw://ded9d3335df6773a2766200a122490e9880e229b809d5669a585b9f243ff5465\",\"dweb:/ipfs/Qmc7j5yGb96fEgb9TxrzGusvTs3uCNAL5LWKBbHXtVGreN\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/moc-gobernanza/Governance/IGovernor.sol\":{\"keccak256\":\"0x16374df2d13479b18a9e03fde811dc2807c759d1f24bea11f94f2978300905cf\",\"urls\":[\"bzz-raw://a2f9013049483553450593c9a06c35cb4c6db3a2208899ffb202a1418804760b\",\"dweb:/ipfs/QmcSBCLJefT1cZwbMKE5nsfHb6vgiUw2Nu1Cn7TKzj4rBA\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/Initializable.sol\":{\"keccak256\":\"0xee7d0fc67ce200dc66e79cae8d56e0aab1f83bf185d8be92feb4e78b6a09c68f\",\"urls\":[\"bzz-raw://f93c892f168339ddbca740122d79eed0e133561c52c93d00fd45ebee23711fd5\",\"dweb:/ipfs/Qmdmhv72FiaJVnS9MPqkU7HRSTjEF3woKbPiRTQJktXGs9\"]},\"/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0xbdba45ce90a83f9cd62e01fc25c5c4156533356bf70e80fd17f01bf38d8a1e4e\",\"urls\":[\"bzz-raw://b5e8878db86c6bdfd6effd4071a3dc93a0783f0623c8cc7e8bd678ca5a38e772\",\"dweb:/ipfs/Qma9FRmoSfMdoGNCyHq2ZY5CBdMW1LKwqBhPD9w5v3icqS\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c4d66de811610071578063c4d66de81461015d578063d6ee951a14610183578063dc8990e1146101af578063df1810f914610255578063dfd25cc414610272578063eff3609814610295576100a9565b80630c340a24146100ae5780630d2020dd146100d257806363adb1a2146100ef5780638e04191e14610109578063b6e0833014610137575b600080fd5b6100b66102b8565b604080516001600160a01b039092168252519081900360200190f35b6100b6600480360360208110156100e857600080fd5b50356102c7565b6100f76102e0565b60408051918252519081900360200190f35b6101356004803603604081101561011f57600080fd5b50803590602001356001600160a01b03166102f1565b005b6101356004803603602081101561014d57600080fd5b50356001600160a01b0316610435565b6101356004803603602081101561017357600080fd5b50356001600160a01b0316610548565b6101356004803603604081101561019957600080fd5b50803590602001356001600160a01b03166105f3565b610135600480360360208110156101c557600080fd5b8101906020810181356401000000008111156101e057600080fd5b8201836020820111156101f257600080fd5b8035906020019184600183028401116401000000008311171561021457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106f6945050505050565b6100f76004803603602081101561026b57600080fd5b503561097a565b6101356004803603604081101561028857600080fd5b508035906020013561098d565b6100f7600480360360408110156102ab57600080fd5b5080359060200135610a90565b6033546001600160a01b031681565b60006102da60668363ffffffff610aab16565b92915050565b60006102ec6066610ac7565b905090565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b15801561033c57600080fd5b505afa158015610350573d6000803e3d6000fd5b505050506040513d602081101561036657600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b60208201529061041e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103e35781810151838201526020016103cb565b50505050905090810190601f1680156104105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506104316066838363ffffffff610ace16565b5050565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d60208110156104aa57600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b6020820152906105255760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156103e35781810151838201526020016103cb565b50603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16806105615750610561610bb8565b8061056f575060005460ff16155b6105aa5760405162461bcd60e51b815260040180806020018281038252602e815260200180610f47602e913960400191505060405180910390fd5b600054610100900460ff161580156105d5576000805460ff1961ff0019909116610100171660011790555b6105de82610bbe565b8015610431576000805461ff00191690555050565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b15801561063e57600080fd5b505afa158015610652573d6000803e3d6000fd5b505050506040513d602081101561066857600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b6020820152906106e35760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156103e35781810151838201526020016103cb565b506104316066838363ffffffff610be016565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b15801561074157600080fd5b505afa158015610755573d6000803e3d6000fd5b505050506040513d602081101561076b57600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b6020820152906107e65760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156103e35781810151838201526020016103cb565b5060003390506000816001600160a01b0316836040516024018080602001828103825283818151815260200191508051906020019080838360005b83811015610839578181015183820152602001610821565b50505050905090810190601f1680156108665780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166350b113e560e11b178152905182519295509350839250908083835b602083106108c15780518252601f1990920191602091820191016108a2565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610921576040519150601f19603f3d011682016040523d82523d6000602084013e610926565b606091505b5050905080610975576040805162461bcd60e51b8152602060048201526016602482015275115c9c9bdc881a5b8819195b1959d85d194818d85b1b60521b604482015290519081900360640190fd5b505050565b60006102da60668363ffffffff610ccb16565b6033546040805163d994d6d560e01b815233600482015290516001600160a01b039092169163d994d6d591602480820192602092909190829003018186803b1580156109d857600080fd5b505afa1580156109ec573d6000803e3d6000fd5b505050506040513d6020811015610a0257600080fd5b50516040805180820190915260168152753737ba2fb0baba3437b934bd32b22fb1b430b733b2b960511b602082015290610a7d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156103e35781810151838201526020016103cb565b506104316066838363ffffffff610d3816565b6000610aa46066848463ffffffff610e6816565b9392505050565b600090815260209190915260409020546001600160a01b031690565b6001015490565b6001600160a01b038116610b22576040805162461bcd60e51b8152602060048201526016602482015275416464726573732063616e6e6f74206265207a65726f60501b604482015290519081900360640190fd5b6000828152602084905260409020546001600160a01b031615610b765760405162461bcd60e51b8152600401808060200182810382526024815260200180610f236024913960400191505060405180910390fd5b600082815260208481526040822080546001600160a01b0319166001600160a01b03949094169390931790925560019384018054948501815581522090910155565b303b1590565b603380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116610c34576040805162461bcd60e51b8152602060048201526016602482015275416464726573732063616e6e6f74206265207a65726f60501b604482015290519081900360640190fd5b6000828152602084905260409020546001600160a01b0316610c9d576040805162461bcd60e51b815260206004820181905260248201527f5468697320636f696e2070616972206973206e6f742072656769737465726564604482015290519081900360640190fd5b60009182526020929092526040902080546001600160a01b0319166001600160a01b03909216919091179055565b60018201546000908210610d16576040805162461bcd60e51b815260206004820152600d60248201526c092d8d8cacec2d840d2dcc8caf609b1b604482015290519081900360640190fd5b826001018281548110610d2557fe5b9060005260206000200154905092915050565b6000828152602084905260409020546001600160a01b0316610d8b5760405162461bcd60e51b8152600401808060200182810382526026815260200180610efd6026913960400191505060405180910390fd5b6000610d98848484610e68565b60018501549091508110610de9576040805162461bcd60e51b815260206004820152601360248201527210dbda5b881c185a5c881b9bdd08199bdd5b99606a1b604482015290519081900360640190fd5b600083815260208590526040902080546001600160a01b03191690556001840180546000198101908110610e1957fe5b9060005260206000200154846001018281548110610e3357fe5b60009182526020909120015560018401805480610e4c57fe5b6001900381819060005260206000200160009055905550505050565b60018301546000908210610eb3576040805162461bcd60e51b815260206004820152600d60248201526c092d8d8cacec2d840d2dcc8caf609b1b604482015290519081900360640190fd5b815b6001850154811015610ef15783856001018281548110610ed157fe5b90600052602060002001541415610ee9579050610aa4565b600101610eb5565b50505050600101549056fe5468697320636f696e207061697220697320616c726561647920756e726567697374657265645468697320636f696e207061697220697320616c72656164792072656769737465726564436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a2646970667358221220d351930bdfae566cba50dcbfe924f92f6b419b1aac8ad22aeb35854ea1c64b7764736f6c63430006000033",
  "sourceMap": "540:2945:10:-:0;;;;;;;;;",
  "deployedSourceMap": "540:2945:10:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;540:2945:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:25:45;;;:::i;:::-;;;;-1:-1:-1;;;;;511:25:45;;;;;;;;;;;;;;2431:152:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2431:152:10;;:::i;2725:121::-;;;:::i;:::-;;;;;;;;;;;;;;;;1224:191;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1224:191:10;;;;;;-1:-1:-1;;;;;1224:191:10;;:::i;:::-;;1472:120:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1472:120:45;-1:-1:-1;;;;;1472:120:45;;:::i;914:110:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;914:110:10;-1:-1:-1;;;;;914:110:10;;:::i;1637:181::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1637:181:10;;;;;;-1:-1:-1;;;;;1637:181:10;;:::i;678:293:33:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;678:293:33;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;678:293:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;678:293:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;678:293:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;678:293:33;;-1:-1:-1;678:293:33;;-1:-1:-1;;;;;678:293:33:i;2933:138:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2933:138:10;;:::i;2025:166::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2025:166:10;;;;;;;:::i;3314:168::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3314:168:10;;;;;;;:::i;511:25:45:-;;;-1:-1:-1;;;;;511:25:45;;:::o;2431:152:10:-;2500:7;2526:50;:20;2567:8;2526:50;:40;:50;:::i;:::-;2519:57;2431:152;-1:-1:-1;;2431:152:10:o;2725:121::-;2776:4;2799:40;:20;:38;:40::i;:::-;2792:47;;2725:121;:::o;1224:191::-;854:8:45;;:40;;;-1:-1:-1;;;854:40:45;;883:10;854:40;;;;;;-1:-1:-1;;;;;854:8:45;;;;:28;;:40;;;;;;;;;;;;;;;:8;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;854:40:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;854:40:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;854:40:45;896:22;;;;;;;;;;;;-1:-1:-1;;;854:40:45;896:22;;;;846:73;;;;-1:-1:-1;;;846:73:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;846:73:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1345:63:10::1;:20;1384:8:::0;1402:4;1345:63:::1;:38;:63;:::i;:::-;1224:191:::0;;:::o;1472:120:45:-;854:8;;:40;;;-1:-1:-1;;;854:40:45;;883:10;854:40;;;;;;-1:-1:-1;;;;;854:8:45;;;;:28;;:40;;;;;;;;;;;;;;;:8;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;854:40:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;854:40:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;854:40:45;896:22;;;;;;;;;;;;-1:-1:-1;;;854:40:45;896:22;;;;846:73;;;;-1:-1:-1;;;846:73:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;846:73:45;-1:-1:-1;1562:8:45::1;:23:::0;;-1:-1:-1;;;;;;1562:23:45::1;-1:-1:-1::0;;;;;1562:23:45;;;::::1;::::0;;;::::1;::::0;;1472:120::o;914:110:10:-;391:12:52;;;;;;;;:31;;;407:15;:13;:15::i;:::-;391:47;;;-1:-1:-1;427:11:52;;;;426:12;391:47;383:106;;;;-1:-1:-1;;;383:106:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:19;519:12;;;;;;518:13;537:80;;;;565:12;:19;;-1:-1:-1;;;;565:19:52;;;;;592:18;580:4;592:18;;;537:80;986:31:10::1;1007:9;986:20;:31::i;:::-;635:14:52::0;631:55;;;674:5;659:20;;-1:-1:-1;;659:20:52;;;914:110:10;;:::o;1637:181::-;854:8:45;;:40;;;-1:-1:-1;;;854:40:45;;883:10;854:40;;;;;;-1:-1:-1;;;;;854:8:45;;;;:28;;:40;;;;;;;;;;;;;;;:8;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;854:40:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;854:40:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;854:40:45;896:22;;;;;;;;;;;;-1:-1:-1;;;854:40:45;896:22;;;;846:73;;;;-1:-1:-1;;;846:73:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;846:73:45;-1:-1:-1;1753:58:10::1;:20;1787:8:::0;1805:4;1753:58:::1;:33;:58;:::i;678:293:33:-:0;854:8:45;;:40;;;-1:-1:-1;;;854:40:45;;883:10;854:40;;;;;;-1:-1:-1;;;;;854:8:45;;;;:28;;:40;;;;;;;;;;;;;;;:8;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;854:40:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;854:40:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;854:40:45;896:22;;;;;;;;;;;;-1:-1:-1;;;854:40:45;896:22;;;;846:73;;;;-1:-1:-1;;;846:73:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;846:73:45;;769:22:33::1;794:10;769:35;;815:12;832:14;-1:-1:-1::0;;;;;832:27:33::1;906:4;860:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11:::0;;::::1;84:18:::0;71:11;;::::1;64:39:::0;52:2:::1;45:10;8:100;;;12:14;860:51:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;860:51:33::1;::::0;;-1:-1:-1;;26:21;;::::1;22:32:::0;6:49;;860:51:33;;;49:4:-1::1;25:18:::0;::::1;61:17:::0;;-1:-1;;;;;182:15:::1;-1:-1:::0;;;179:29:::1;160:49:::0;;832:80:33;;;;860:51;;-1:-1:-1;832:80:33;-1:-1:-1;832:80:33;;-1:-1:-1;25:18;832:80:33;;25:18:-1;36:153:::1;66:2;61:3;58:11;36:153;;176:10:::0;;164:23;;-1:-1;;139:12;;;;98:2:::1;89:12:::0;;::::1;::::0;114::::1;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;832:80:33;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;814:98:33;;;930:7;922:42;;;::::0;;-1:-1:-1;;;922:42:33;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;922:42:33;;;;;;;;;;;;;::::1;;929:1:45;;678:293:33::0;:::o;2933:138:10:-;2995:7;3021:43;:20;3062:1;3021:43;:40;:43;:::i;2025:166::-;854:8:45;;:40;;;-1:-1:-1;;;854:40:45;;883:10;854:40;;;;;;-1:-1:-1;;;;;854:8:45;;;;:28;;:40;;;;;;;;;;;;;;;:8;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;854:40:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;854:40:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;854:40:45;896:22;;;;;;;;;;;;-1:-1:-1;;;854:40:45;896:22;;;;846:73;;;;-1:-1:-1;;;846:73:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;846:73:45;-1:-1:-1;2128:56:10::1;:20;2169:8:::0;2179:4;2128:56:::1;:40;:56;:::i;3314:168::-:0;3395:7;3421:54;:20;3460:8;3470:4;3421:54;:38;:54;:::i;:::-;3414:61;3314:168;-1:-1:-1;;;3314:168:10:o;2421:165:32:-;2526:7;2553:26;;;;;;;;;;;;-1:-1:-1;;;;;2553:26:32;;2421:165::o;2728:140::-;2837:17;;:24;;2728:140::o;574:360::-;-1:-1:-1;;;;;696:18:32;;688:53;;;;;-1:-1:-1;;;688:53:32;;;;;;;;;;;;-1:-1:-1;;;688:53:32;;;;;;;;;;;;;;;797:3;759:26;;;;;;;;;;;-1:-1:-1;;;;;759:26:32;:42;751:91;;;;-1:-1:-1;;;751:91:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:16;:26;;;;;;;;;;:33;;-1:-1:-1;;;;;;852:33:32;-1:-1:-1;;;;;852:33:32;;;;;;;;;;;-1:-1:-1;895:17:32;;;27:10:-1;;23:18;;;45:23;;895:32:32;;;;;;;574:360::o;776:498:52:-;1187:4;1231:17;1262:7;776:498;:::o;1218:88:45:-;1279:8;:20;;-1:-1:-1;;;;;;1279:20:45;-1:-1:-1;;;;;1279:20:45;;;;;;;;;;1218:88::o;1873:309:32:-;-1:-1:-1;;;;;1990:18:32;;1982:53;;;;;-1:-1:-1;;;1982:53:32;;;;;;;;;;;;-1:-1:-1;;;1982:53:32;;;;;;;;;;;;;;;2091:3;2053:26;;;;;;;;;;;-1:-1:-1;;;;;2053:26:32;2045:87;;;;;-1:-1:-1;;;2045:87:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2142:16;:26;;;;;;;;;;;:33;;-1:-1:-1;;;;;;2142:33:32;-1:-1:-1;;;;;2142:33:32;;;;;;;;;1873:309::o;2955:216::-;3085:17;;;:24;3053:7;;3081:28;;3073:54;;;;;-1:-1:-1;;;3073:54:32;;;;;;;;;;;;-1:-1:-1;;;3073:54:32;;;;;;;;;;;;;;;3144:4;:17;;3162:1;3144:20;;;;;;;;;;;;;;;;3137:27;;2955:216;;;;:::o;1141:509::-;1303:3;1265:26;;;;;;;;;;;-1:-1:-1;;;;;1265:26:32;1257:93;;;;-1:-1:-1;;;1257:93:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:11;1374:39;1392:4;1398:8;1408:4;1374:17;:39::i;:::-;1437:17;;;:24;1360:53;;-1:-1:-1;1431:30:32;;1423:62;;;;;-1:-1:-1;;;1423:62:32;;;;;;;;;;;;-1:-1:-1;;;1423:62:32;;;;;;;;;;;;;;;1502:16;:26;;;;;;;;;;1495:33;;-1:-1:-1;;;;;;1495:33:32;;;;1563:17;;1581:24;;-1:-1:-1;;1581:28:32;;;1563:47;;;;;;;;;;;;;;1538:4;:17;;1556:3;1538:22;;;;;;;;;;;;;;;;;:72;1620:17;;;:23;;;;;;;;;;;;;;;;;;;;;;;;1141:509;;;;:::o;3414:415::-;3569:17;;;:24;3535:7;;3562:31;;3554:57;;;;;-1:-1:-1;;;3554:57:32;;;;;;;;;;;;-1:-1:-1;;;3554:57:32;;;;;;;;;;;;;;;3638:4;3621:161;3648:17;;;:24;3644:28;;3621:161;;;3721:8;3697:4;:17;;3715:1;3697:20;;;;;;;;;;;;;;;;:32;3693:79;;;3756:1;-1:-1:-1;3749:8:32;;3693:79;3674:3;;3621:161;;;-1:-1:-1;;;;3798:17:32;;:24;;3414:415::o",
  "source": "pragma solidity 0.6.0;\n\nimport {SafeMath} from \"./openzeppelin/math/SafeMath.sol\";\nimport {IGovernor} from \"./moc-gobernanza/Governance/IGovernor.sol\";\nimport {Governed} from \"./moc-gobernanza/Governance/Governed.sol\";\nimport {IPriceProviderRegisterEntry} from \"./libs/IPriceProviderRegisterEntry.sol\";\nimport {PriceProviderRegisterStorage} from \"./PriceProviderRegisterStorage.sol\";\n\n/// @title A registry for the coin pair prices, this is more general than OracleManager that stores\n/// only the coin pairs that are published by oracles.\ncontract PriceProviderRegister is PriceProviderRegisterStorage {\n    using SafeMath for uint;\n\n    /**\n      @notice Initialize the contract with the basic settings\n      @dev This initialize replaces the constructor but it is not called automatically.\n      It is necessary because of the upgradeability of the contracts\n      @param _governor Governor address\n     */\n    function initialize(IGovernor _governor) external initializer {\n        Governed._initialize(_governor);\n    }\n\n    /// @notice Register a new coin pair contract.\n    /// @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n    /// @param addr The contract address associated to the coinpair.\n    function registerCoinPair(bytes32 coinPair, IPriceProviderRegisterEntry addr) external onlyAuthorizedChanger() {\n        coinPairRegisterData._registerCoinPair(coinPair, address(addr));\n    }\n\n    /// @notice Set the address for a coinpair (the old one is lost!!!!)\n    /// @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n    /// @param addr The contract address associated to the coinpair.\n    function setCoinPair(bytes32 coinPair, IPriceProviderRegisterEntry addr) external onlyAuthorizedChanger() {\n        coinPairRegisterData._setCoinPair(coinPair, address(addr));\n    }\n\n    /// @notice Unregister a coin pair contract.\n    /// @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n    /// @param hint Optional hint to start traversing the coinPairList array.\n    function unRegisterCoinPair(bytes32 coinPair, uint256 hint) external onlyAuthorizedChanger() {\n        coinPairRegisterData._unRegisterCoinPair(coinPair, hint);\n    }\n\n\n    /// @notice Return the contract address for a specified registered coin pair.\n    /// @param coinpair Coin-pair string to lookup (e.g: BTCUSD)\n    /// @return address Address of contract or zero if does not exist or was deleted.\n    function getContractAddress(bytes32 coinpair) external view returns (address) {\n        return coinPairRegisterData._getContractAddress(coinpair);\n    }\n\n    /// @notice Returns the count of registered coin pairs.\n    /// Keep in mind that Deleted coin-pairs will contain zeroed addresses.\n    function getCoinPairCount() external view returns (uint) {\n        return coinPairRegisterData._getCoinPairCount();\n    }\n\n    /// @notice Returns the coin pair at index.\n    /// @param i index to query.\n    function getCoinPairAtIndex(uint256 i) external view returns (bytes32) {\n        return coinPairRegisterData._getCoinPairAtIndex(i);\n    }\n\n    /// @notice Searches a coinpair in coinPairList\n    /// @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n    /// @param hint Optional hint to start traversing the coinPairList array, zero is to search all the array.\n    function getCoinPairIndex(bytes32 coinPair, uint256 hint) external view returns (uint256) {\n        return coinPairRegisterData._getCoinPairIndex(coinPair, hint);\n    }\n\n}\n",
  "sourcePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/PriceProviderRegister.sol",
  "ast": {
    "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/PriceProviderRegister.sol",
    "exportedSymbols": {
      "PriceProviderRegister": [
        3758
      ]
    },
    "id": 3759,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3619,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:10"
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/math/SafeMath.sol",
        "file": "./openzeppelin/math/SafeMath.sol",
        "id": 3621,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 9626,
        "src": "24:58:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3620,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "32:8:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/moc-gobernanza/Governance/IGovernor.sol",
        "file": "./moc-gobernanza/Governance/IGovernor.sol",
        "id": 3623,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 9044,
        "src": "83:68:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3622,
              "name": "IGovernor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "91:9:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/moc-gobernanza/Governance/Governed.sol",
        "file": "./moc-gobernanza/Governance/Governed.sol",
        "id": 3625,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 8926,
        "src": "152:66:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3624,
              "name": "Governed",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "160:8:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/libs/IPriceProviderRegisterEntry.sol",
        "file": "./libs/IPriceProviderRegisterEntry.sol",
        "id": 3627,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 6342,
        "src": "219:83:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3626,
              "name": "IPriceProviderRegisterEntry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "227:27:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/PriceProviderRegisterStorage.sol",
        "file": "./PriceProviderRegisterStorage.sol",
        "id": 3629,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 3792,
        "src": "303:80:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3628,
              "name": "PriceProviderRegisterStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "311:28:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3630,
              "name": "PriceProviderRegisterStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3791,
              "src": "574:28:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceProviderRegisterStorage_$3791",
                "typeString": "contract PriceProviderRegisterStorage"
              }
            },
            "id": 3631,
            "nodeType": "InheritanceSpecifier",
            "src": "574:28:10"
          }
        ],
        "contractDependencies": [
          3791,
          6319,
          8925,
          9369
        ],
        "contractKind": "contract",
        "documentation": "@title A registry for the coin pair prices, this is more general than OracleManager that stores\n only the coin pairs that are published by oracles.",
        "fullyImplemented": true,
        "id": 3758,
        "linearizedBaseContracts": [
          3758,
          3791,
          6319,
          8925,
          9369
        ],
        "name": "PriceProviderRegister",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3634,
            "libraryName": {
              "contractScope": null,
              "id": 3632,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9625,
              "src": "615:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$9625",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "609:24:10",
            "typeName": {
              "id": 3633,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "628:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 3647,
              "nodeType": "Block",
              "src": "976:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3644,
                        "name": "_governor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3636,
                        "src": "1007:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGovernor_$9043",
                          "typeString": "contract IGovernor"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IGovernor_$9043",
                          "typeString": "contract IGovernor"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3641,
                        "name": "Governed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8925,
                        "src": "986:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Governed_$8925_$",
                          "typeString": "type(contract Governed)"
                        }
                      },
                      "id": 3643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8908,
                      "src": "986:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IGovernor_$9043_$returns$__$",
                        "typeString": "function (contract IGovernor)"
                      }
                    },
                    "id": 3645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "986:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3646,
                  "nodeType": "ExpressionStatement",
                  "src": "986:31:10"
                }
              ]
            },
            "documentation": "@notice Initialize the contract with the basic settings\n@dev This initialize replaces the constructor but it is not called automatically.\nIt is necessary because of the upgradeability of the contracts\n@param _governor Governor address",
            "functionSelector": "c4d66de8",
            "id": 3648,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3639,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3638,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9343,
                  "src": "964:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "964:11:10"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3636,
                  "name": "_governor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3648,
                  "src": "934:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGovernor_$9043",
                    "typeString": "contract IGovernor"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3635,
                    "name": "IGovernor",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9043,
                    "src": "934:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGovernor_$9043",
                      "typeString": "contract IGovernor"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "933:21:10"
            },
            "returnParameters": {
              "id": 3640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:0:10"
            },
            "scope": 3758,
            "src": "914:110:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3667,
              "nodeType": "Block",
              "src": "1335:80:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3660,
                        "name": "coinPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3650,
                        "src": "1384:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3663,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3652,
                            "src": "1402:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                              "typeString": "contract IPriceProviderRegisterEntry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                              "typeString": "contract IPriceProviderRegisterEntry"
                            }
                          ],
                          "id": 3662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1394:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1394:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1394:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3657,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "1345:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3659,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_registerCoinPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6071,
                      "src": "1345:38:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$_t_address_$returns$__$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32,address)"
                      }
                    },
                    "id": 3665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:63:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3666,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:63:10"
                }
              ]
            },
            "documentation": "@notice Register a new coin pair contract.\n @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n @param addr The contract address associated to the coinpair.",
            "functionSelector": "8e04191e",
            "id": 3668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3655,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3654,
                  "name": "onlyAuthorizedChanger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8898,
                  "src": "1311:21:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1311:23:10"
              }
            ],
            "name": "registerCoinPair",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3650,
                  "name": "coinPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3668,
                  "src": "1250:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3649,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3652,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3668,
                  "src": "1268:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                    "typeString": "contract IPriceProviderRegisterEntry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3651,
                    "name": "IPriceProviderRegisterEntry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6341,
                    "src": "1268:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                      "typeString": "contract IPriceProviderRegisterEntry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1249:52:10"
            },
            "returnParameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:0:10"
            },
            "scope": 3758,
            "src": "1224:191:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3687,
              "nodeType": "Block",
              "src": "1743:75:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3680,
                        "name": "coinPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3670,
                        "src": "1787:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3683,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3672,
                            "src": "1805:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                              "typeString": "contract IPriceProviderRegisterEntry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                              "typeString": "contract IPriceProviderRegisterEntry"
                            }
                          ],
                          "id": 3682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1797:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1797:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1797:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3677,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "1753:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3679,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setCoinPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6180,
                      "src": "1753:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$_t_address_$returns$__$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32,address)"
                      }
                    },
                    "id": 3685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1753:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3686,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:58:10"
                }
              ]
            },
            "documentation": "@notice Set the address for a coinpair (the old one is lost!!!!)\n @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n @param addr The contract address associated to the coinpair.",
            "functionSelector": "d6ee951a",
            "id": 3688,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3675,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3674,
                  "name": "onlyAuthorizedChanger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8898,
                  "src": "1719:21:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1719:23:10"
              }
            ],
            "name": "setCoinPair",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3670,
                  "name": "coinPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3688,
                  "src": "1658:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3669,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3672,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3688,
                  "src": "1676:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                    "typeString": "contract IPriceProviderRegisterEntry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3671,
                    "name": "IPriceProviderRegisterEntry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6341,
                    "src": "1676:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                      "typeString": "contract IPriceProviderRegisterEntry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:52:10"
            },
            "returnParameters": {
              "id": 3676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:10"
            },
            "scope": 3758,
            "src": "1637:181:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3704,
              "nodeType": "Block",
              "src": "2118:73:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3700,
                        "name": "coinPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "2169:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3701,
                        "name": "hint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3692,
                        "src": "2179:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3697,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "2128:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_unRegisterCoinPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6139,
                      "src": "2128:40:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$_t_uint256_$returns$__$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32,uint256)"
                      }
                    },
                    "id": 3702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3703,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:56:10"
                }
              ]
            },
            "documentation": "@notice Unregister a coin pair contract.\n @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n @param hint Optional hint to start traversing the coinPairList array.",
            "functionSelector": "dfd25cc4",
            "id": 3705,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3694,
                  "name": "onlyAuthorizedChanger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8898,
                  "src": "2094:21:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2094:23:10"
              }
            ],
            "name": "unRegisterCoinPair",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3690,
                  "name": "coinPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3705,
                  "src": "2053:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3689,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3692,
                  "name": "hint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3705,
                  "src": "2071:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2071:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2052:32:10"
            },
            "returnParameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:0:10"
            },
            "scope": 3758,
            "src": "2025:166:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3717,
              "nodeType": "Block",
              "src": "2509:74:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3714,
                        "name": "coinpair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3707,
                        "src": "2567:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3712,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "2526:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3713,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getContractAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6195,
                      "src": "2526:40:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$returns$_t_address_$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32) view returns (address)"
                      }
                    },
                    "id": 3715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:50:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3711,
                  "id": 3716,
                  "nodeType": "Return",
                  "src": "2519:57:10"
                }
              ]
            },
            "documentation": "@notice Return the contract address for a specified registered coin pair.\n @param coinpair Coin-pair string to lookup (e.g: BTCUSD)\n @return address Address of contract or zero if does not exist or was deleted.",
            "functionSelector": "0d2020dd",
            "id": 3718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3707,
                  "name": "coinpair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3718,
                  "src": "2459:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2459:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2458:18:10"
            },
            "returnParameters": {
              "id": 3711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3710,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3718,
                  "src": "2500:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2499:9:10"
            },
            "scope": 3758,
            "src": "2431:152:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3727,
              "nodeType": "Block",
              "src": "2782:64:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3723,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "2799:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getCoinPairCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6207,
                      "src": "2799:38:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2799:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3722,
                  "id": 3726,
                  "nodeType": "Return",
                  "src": "2792:47:10"
                }
              ]
            },
            "documentation": "@notice Returns the count of registered coin pairs.\n Keep in mind that Deleted coin-pairs will contain zeroed addresses.",
            "functionSelector": "63adb1a2",
            "id": 3728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCoinPairCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2750:2:10"
            },
            "returnParameters": {
              "id": 3722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3721,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3728,
                  "src": "2776:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3720,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2775:6:10"
            },
            "scope": 3758,
            "src": "2725:121:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3740,
              "nodeType": "Block",
              "src": "3004:67:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3737,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3730,
                        "src": "3062:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3735,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "3021:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3736,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getCoinPairAtIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6231,
                      "src": "3021:40:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 3738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3734,
                  "id": 3739,
                  "nodeType": "Return",
                  "src": "3014:50:10"
                }
              ]
            },
            "documentation": "@notice Returns the coin pair at index.\n @param i index to query.",
            "functionSelector": "df1810f9",
            "id": 3741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCoinPairAtIndex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3730,
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3741,
                  "src": "2961:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2960:11:10"
            },
            "returnParameters": {
              "id": 3734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3733,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3741,
                  "src": "2995:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:9:10"
            },
            "scope": 3758,
            "src": "2933:138:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3756,
              "nodeType": "Block",
              "src": "3404:78:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3752,
                        "name": "coinPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3743,
                        "src": "3460:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3753,
                        "name": "hint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3745,
                        "src": "3470:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3750,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "3421:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3751,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getCoinPairIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6280,
                      "src": "3421:38:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 3754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3421:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3749,
                  "id": 3755,
                  "nodeType": "Return",
                  "src": "3414:61:10"
                }
              ]
            },
            "documentation": "@notice Searches a coinpair in coinPairList\n @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n @param hint Optional hint to start traversing the coinPairList array, zero is to search all the array.",
            "functionSelector": "eff36098",
            "id": 3757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCoinPairIndex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3743,
                  "name": "coinPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3757,
                  "src": "3340:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3745,
                  "name": "hint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3757,
                  "src": "3358:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3339:32:10"
            },
            "returnParameters": {
              "id": 3749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3748,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3757,
                  "src": "3395:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3395:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3394:9:10"
            },
            "scope": 3758,
            "src": "3314:168:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3759,
        "src": "540:2945:10"
      }
    ],
    "src": "0:3486:10"
  },
  "legacyAST": {
    "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/PriceProviderRegister.sol",
    "exportedSymbols": {
      "PriceProviderRegister": [
        3758
      ]
    },
    "id": 3759,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3619,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:10"
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/openzeppelin/math/SafeMath.sol",
        "file": "./openzeppelin/math/SafeMath.sol",
        "id": 3621,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 9626,
        "src": "24:58:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3620,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "32:8:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/moc-gobernanza/Governance/IGovernor.sol",
        "file": "./moc-gobernanza/Governance/IGovernor.sol",
        "id": 3623,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 9044,
        "src": "83:68:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3622,
              "name": "IGovernor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "91:9:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/moc-gobernanza/Governance/Governed.sol",
        "file": "./moc-gobernanza/Governance/Governed.sol",
        "id": 3625,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 8926,
        "src": "152:66:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3624,
              "name": "Governed",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "160:8:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/libs/IPriceProviderRegisterEntry.sol",
        "file": "./libs/IPriceProviderRegisterEntry.sol",
        "id": 3627,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 6342,
        "src": "219:83:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3626,
              "name": "IPriceProviderRegisterEntry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "227:27:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/adji/Desktop/work/coinfabrik/OMoC-Decentralized-Oracle/contracts/contracts/PriceProviderRegisterStorage.sol",
        "file": "./PriceProviderRegisterStorage.sol",
        "id": 3629,
        "nodeType": "ImportDirective",
        "scope": 3759,
        "sourceUnit": 3792,
        "src": "303:80:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3628,
              "name": "PriceProviderRegisterStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "311:28:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3630,
              "name": "PriceProviderRegisterStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3791,
              "src": "574:28:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceProviderRegisterStorage_$3791",
                "typeString": "contract PriceProviderRegisterStorage"
              }
            },
            "id": 3631,
            "nodeType": "InheritanceSpecifier",
            "src": "574:28:10"
          }
        ],
        "contractDependencies": [
          3791,
          6319,
          8925,
          9369
        ],
        "contractKind": "contract",
        "documentation": "@title A registry for the coin pair prices, this is more general than OracleManager that stores\n only the coin pairs that are published by oracles.",
        "fullyImplemented": true,
        "id": 3758,
        "linearizedBaseContracts": [
          3758,
          3791,
          6319,
          8925,
          9369
        ],
        "name": "PriceProviderRegister",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3634,
            "libraryName": {
              "contractScope": null,
              "id": 3632,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9625,
              "src": "615:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$9625",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "609:24:10",
            "typeName": {
              "id": 3633,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "628:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 3647,
              "nodeType": "Block",
              "src": "976:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3644,
                        "name": "_governor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3636,
                        "src": "1007:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGovernor_$9043",
                          "typeString": "contract IGovernor"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IGovernor_$9043",
                          "typeString": "contract IGovernor"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3641,
                        "name": "Governed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8925,
                        "src": "986:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Governed_$8925_$",
                          "typeString": "type(contract Governed)"
                        }
                      },
                      "id": 3643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8908,
                      "src": "986:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IGovernor_$9043_$returns$__$",
                        "typeString": "function (contract IGovernor)"
                      }
                    },
                    "id": 3645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "986:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3646,
                  "nodeType": "ExpressionStatement",
                  "src": "986:31:10"
                }
              ]
            },
            "documentation": "@notice Initialize the contract with the basic settings\n@dev This initialize replaces the constructor but it is not called automatically.\nIt is necessary because of the upgradeability of the contracts\n@param _governor Governor address",
            "functionSelector": "c4d66de8",
            "id": 3648,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3639,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3638,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9343,
                  "src": "964:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "964:11:10"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3636,
                  "name": "_governor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3648,
                  "src": "934:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGovernor_$9043",
                    "typeString": "contract IGovernor"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3635,
                    "name": "IGovernor",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9043,
                    "src": "934:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGovernor_$9043",
                      "typeString": "contract IGovernor"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "933:21:10"
            },
            "returnParameters": {
              "id": 3640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:0:10"
            },
            "scope": 3758,
            "src": "914:110:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3667,
              "nodeType": "Block",
              "src": "1335:80:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3660,
                        "name": "coinPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3650,
                        "src": "1384:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3663,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3652,
                            "src": "1402:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                              "typeString": "contract IPriceProviderRegisterEntry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                              "typeString": "contract IPriceProviderRegisterEntry"
                            }
                          ],
                          "id": 3662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1394:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1394:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1394:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3657,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "1345:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3659,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_registerCoinPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6071,
                      "src": "1345:38:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$_t_address_$returns$__$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32,address)"
                      }
                    },
                    "id": 3665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:63:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3666,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:63:10"
                }
              ]
            },
            "documentation": "@notice Register a new coin pair contract.\n @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n @param addr The contract address associated to the coinpair.",
            "functionSelector": "8e04191e",
            "id": 3668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3655,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3654,
                  "name": "onlyAuthorizedChanger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8898,
                  "src": "1311:21:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1311:23:10"
              }
            ],
            "name": "registerCoinPair",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3650,
                  "name": "coinPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3668,
                  "src": "1250:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3649,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3652,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3668,
                  "src": "1268:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                    "typeString": "contract IPriceProviderRegisterEntry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3651,
                    "name": "IPriceProviderRegisterEntry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6341,
                    "src": "1268:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                      "typeString": "contract IPriceProviderRegisterEntry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1249:52:10"
            },
            "returnParameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:0:10"
            },
            "scope": 3758,
            "src": "1224:191:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3687,
              "nodeType": "Block",
              "src": "1743:75:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3680,
                        "name": "coinPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3670,
                        "src": "1787:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3683,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3672,
                            "src": "1805:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                              "typeString": "contract IPriceProviderRegisterEntry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                              "typeString": "contract IPriceProviderRegisterEntry"
                            }
                          ],
                          "id": 3682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1797:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1797:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1797:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3677,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "1753:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3679,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setCoinPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6180,
                      "src": "1753:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$_t_address_$returns$__$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32,address)"
                      }
                    },
                    "id": 3685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1753:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3686,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:58:10"
                }
              ]
            },
            "documentation": "@notice Set the address for a coinpair (the old one is lost!!!!)\n @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n @param addr The contract address associated to the coinpair.",
            "functionSelector": "d6ee951a",
            "id": 3688,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3675,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3674,
                  "name": "onlyAuthorizedChanger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8898,
                  "src": "1719:21:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1719:23:10"
              }
            ],
            "name": "setCoinPair",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3670,
                  "name": "coinPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3688,
                  "src": "1658:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3669,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3672,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3688,
                  "src": "1676:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                    "typeString": "contract IPriceProviderRegisterEntry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3671,
                    "name": "IPriceProviderRegisterEntry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6341,
                    "src": "1676:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceProviderRegisterEntry_$6341",
                      "typeString": "contract IPriceProviderRegisterEntry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:52:10"
            },
            "returnParameters": {
              "id": 3676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:10"
            },
            "scope": 3758,
            "src": "1637:181:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3704,
              "nodeType": "Block",
              "src": "2118:73:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3700,
                        "name": "coinPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "2169:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3701,
                        "name": "hint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3692,
                        "src": "2179:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3697,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "2128:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_unRegisterCoinPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6139,
                      "src": "2128:40:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$_t_uint256_$returns$__$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32,uint256)"
                      }
                    },
                    "id": 3702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3703,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:56:10"
                }
              ]
            },
            "documentation": "@notice Unregister a coin pair contract.\n @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n @param hint Optional hint to start traversing the coinPairList array.",
            "functionSelector": "dfd25cc4",
            "id": 3705,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3694,
                  "name": "onlyAuthorizedChanger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8898,
                  "src": "2094:21:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2094:23:10"
              }
            ],
            "name": "unRegisterCoinPair",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3690,
                  "name": "coinPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3705,
                  "src": "2053:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3689,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3692,
                  "name": "hint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3705,
                  "src": "2071:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2071:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2052:32:10"
            },
            "returnParameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:0:10"
            },
            "scope": 3758,
            "src": "2025:166:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3717,
              "nodeType": "Block",
              "src": "2509:74:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3714,
                        "name": "coinpair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3707,
                        "src": "2567:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3712,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "2526:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3713,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getContractAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6195,
                      "src": "2526:40:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$returns$_t_address_$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32) view returns (address)"
                      }
                    },
                    "id": 3715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:50:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3711,
                  "id": 3716,
                  "nodeType": "Return",
                  "src": "2519:57:10"
                }
              ]
            },
            "documentation": "@notice Return the contract address for a specified registered coin pair.\n @param coinpair Coin-pair string to lookup (e.g: BTCUSD)\n @return address Address of contract or zero if does not exist or was deleted.",
            "functionSelector": "0d2020dd",
            "id": 3718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3707,
                  "name": "coinpair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3718,
                  "src": "2459:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2459:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2458:18:10"
            },
            "returnParameters": {
              "id": 3711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3710,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3718,
                  "src": "2500:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2499:9:10"
            },
            "scope": 3758,
            "src": "2431:152:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3727,
              "nodeType": "Block",
              "src": "2782:64:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3723,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "2799:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getCoinPairCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6207,
                      "src": "2799:38:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2799:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3722,
                  "id": 3726,
                  "nodeType": "Return",
                  "src": "2792:47:10"
                }
              ]
            },
            "documentation": "@notice Returns the count of registered coin pairs.\n Keep in mind that Deleted coin-pairs will contain zeroed addresses.",
            "functionSelector": "63adb1a2",
            "id": 3728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCoinPairCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2750:2:10"
            },
            "returnParameters": {
              "id": 3722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3721,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3728,
                  "src": "2776:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3720,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2775:6:10"
            },
            "scope": 3758,
            "src": "2725:121:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3740,
              "nodeType": "Block",
              "src": "3004:67:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3737,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3730,
                        "src": "3062:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3735,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "3021:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3736,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getCoinPairAtIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6231,
                      "src": "3021:40:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 3738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3734,
                  "id": 3739,
                  "nodeType": "Return",
                  "src": "3014:50:10"
                }
              ]
            },
            "documentation": "@notice Returns the coin pair at index.\n @param i index to query.",
            "functionSelector": "df1810f9",
            "id": 3741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCoinPairAtIndex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3730,
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3741,
                  "src": "2961:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2960:11:10"
            },
            "returnParameters": {
              "id": 3734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3733,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3741,
                  "src": "2995:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:9:10"
            },
            "scope": 3758,
            "src": "2933:138:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3756,
              "nodeType": "Block",
              "src": "3404:78:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3752,
                        "name": "coinPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3743,
                        "src": "3460:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3753,
                        "name": "hint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3745,
                        "src": "3470:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3750,
                        "name": "coinPairRegisterData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3782,
                        "src": "3421:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CoinPairRegisterData_$6022_storage",
                          "typeString": "struct CoinPairRegisterLib.CoinPairRegisterData storage ref"
                        }
                      },
                      "id": 3751,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getCoinPairIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6280,
                      "src": "3421:38:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_CoinPairRegisterData_$6022_storage_ptr_$",
                        "typeString": "function (struct CoinPairRegisterLib.CoinPairRegisterData storage pointer,bytes32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 3754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3421:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3749,
                  "id": 3755,
                  "nodeType": "Return",
                  "src": "3414:61:10"
                }
              ]
            },
            "documentation": "@notice Searches a coinpair in coinPairList\n @param coinPair The bytes32-encoded coinpair string (e.g. BTCUSD)\n @param hint Optional hint to start traversing the coinPairList array, zero is to search all the array.",
            "functionSelector": "eff36098",
            "id": 3757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCoinPairIndex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3743,
                  "name": "coinPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3757,
                  "src": "3340:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3745,
                  "name": "hint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3757,
                  "src": "3358:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3339:32:10"
            },
            "returnParameters": {
              "id": 3749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3748,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3757,
                  "src": "3395:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3395:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3394:9:10"
            },
            "scope": 3758,
            "src": "3314:168:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3759,
        "src": "540:2945:10"
      }
    ],
    "src": "0:3486:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {
    "31": {
      "links": {},
      "events": {},
      "address": "0x1E57AfF8b6AdF6c223B7c17cBAffFB3A17f87782",
      "updated_at": 1593468524313
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-29T22:16:42.433Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "changeIGovernor(address)": {
        "params": {
          "newIGovernor": "New governor address"
        }
      },
      "getCoinPairAtIndex(uint256)": {
        "params": {
          "i": "index to query."
        }
      },
      "getCoinPairIndex(bytes32,uint256)": {
        "params": {
          "coinPair": "The bytes32-encoded coinpair string (e.g. BTCUSD)",
          "hint": "Optional hint to start traversing the coinPairList array, zero is to search all the array."
        }
      },
      "getContractAddress(bytes32)": {
        "params": {
          "coinpair": "Coin-pair string to lookup (e.g: BTCUSD)"
        },
        "returns": {
          "_0": "address Address of contract or zero if does not exist or was deleted."
        }
      },
      "initialize(address)": {
        "details": "This initialize replaces the constructor but it is not called automatically. It is necessary because of the upgradeability of the contracts",
        "params": {
          "_governor": "Governor address"
        }
      },
      "registerCoinPair(bytes32,address)": {
        "params": {
          "addr": "The contract address associated to the coinpair.",
          "coinPair": "The bytes32-encoded coinpair string (e.g. BTCUSD)"
        }
      },
      "setCoinPair(bytes32,address)": {
        "params": {
          "addr": "The contract address associated to the coinpair.",
          "coinPair": "The bytes32-encoded coinpair string (e.g. BTCUSD)"
        }
      },
      "unRegisterCoinPair(bytes32,uint256)": {
        "params": {
          "coinPair": "The bytes32-encoded coinpair string (e.g. BTCUSD)",
          "hint": "Optional hint to start traversing the coinPairList array."
        }
      }
    },
    "title": "A registry for the coin pair prices, this is more general than OracleManager that stores only the coin pairs that are published by oracles."
  },
  "userdoc": {
    "methods": {
      "changeIGovernor(address)": {
        "notice": "Change the contract's governor. Should be called through the old governance system"
      },
      "getCoinPairAtIndex(uint256)": {
        "notice": "Returns the coin pair at index."
      },
      "getCoinPairCount()": {
        "notice": "Returns the count of registered coin pairs. Keep in mind that Deleted coin-pairs will contain zeroed addresses."
      },
      "getCoinPairIndex(bytes32,uint256)": {
        "notice": "Searches a coinpair in coinPairList"
      },
      "getContractAddress(bytes32)": {
        "notice": "Return the contract address for a specified registered coin pair."
      },
      "initialize(address)": {
        "notice": "Initialize the contract with the basic settings"
      },
      "registerCoinPair(bytes32,address)": {
        "notice": "Register a new coin pair contract."
      },
      "setCoinPair(bytes32,address)": {
        "notice": "Set the address for a coinpair (the old one is lost!!!!)"
      },
      "unRegisterCoinPair(bytes32,uint256)": {
        "notice": "Unregister a coin pair contract."
      }
    }
  }
}